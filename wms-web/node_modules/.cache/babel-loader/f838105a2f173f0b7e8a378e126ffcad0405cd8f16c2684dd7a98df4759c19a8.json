{"ast":null,"code":"export default {\n  name: \"StorageManage\",\n  data() {\n    return {\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        name: '',\n        remark: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入仓库名',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n        this.form.id = '';\n      });\n    },\n    del(id) {\n      console.log(id);\n      this.$axios.get(this.$httpUrl + '/storage/del?id=' + id).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '删除成功！',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '删除失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    modify(row) {\n      console.log(row);\n      this.centerDialogVisible = true; //先打开对话框，表单中的值为form的默认值，后赋值\n      this.$nextTick(() => {\n        //赋值到表单\n        this.form.id = row.id;\n        this.form.name = row.name;\n        this.form.remark = row.remark;\n      });\n    },\n    doMod() {\n      this.$axios.post(this.$httpUrl + '/storage/update', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '编辑成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '编辑失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + '/storage/save', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '添加失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + '/storage/list').then(res => res.data).then(res => {\n        console.log(res);\n      });\n    },\n    resetParam() {\n      this.name = '';\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/storage/listPage', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    }\n  },\n  beforeMount() {\n    //this.loadGet();\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageSize","pageNum","total","centerDialogVisible","form","id","remark","rules","required","message","trigger","methods","resetForm","$refs","resetFields","add","$nextTick","del","console","log","$axios","get","$httpUrl","then","res","code","$message","type","loadPost","modify","row","doMod","post","doSave","save","validate","valid","handleSizeChange","val","handleCurrentChange","loadGet","resetParam","param","alert","beforeMount"],"sources":["src/components/storage/StorageManage.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"margin: 5px\">\n            <el-input v-model=\"name\" placeholder=\"请输入仓库名字\" suffix-icon=\"el-icon-search\" style=\"width: 180px;margin-left: -4px\"\n                      @keyup.enter.native=\"loadPost\"></el-input>\n            <el-button type=\"primary\" style=\"margin-left: 18px;margin-right: 6px\" @click=\"loadPost\">查询</el-button>\n            <el-button type=\"success\" @click=\"resetParam\">重置</el-button>\n            <el-button type=\"primary\" style=\"margin-left: 16px;margin-right: 6px\" @click=\"add\">新增</el-button>\n        </div>\n        <el-table :data=\"tableData\"\n                :header-cell-style=\"{ background: '#f2f5fc', color: '#555555' }\"\n                border>\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"仓库名\" width=\"120\">\n        </el-table-column>\n        <el-table-column prop=\"remark\" label=\"备注\" width=\"300\">\n        </el-table-column>\n        <el-table-column prop=\"operate\" label=\"操作\">\n            <template slot-scope=\"scope\">\n                <el-button size=\"small\" type=\"success\" @click=\"modify(scope.row)\">编辑</el-button>\n                <el-popconfirm\n                    title=\"确定删除吗？\"\n                    @confirm=\"del(scope.row.id)\"\n                    style=\"margin-left: 10px;\"\n                >\n                <el-button slot=\"reference\" size=\"small\" type=\"danger\">删除</el-button>\n                </el-popconfirm>\n            </template>\n        </el-table-column>\n        </el-table>\n\n        <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20,30]\"\n            :page-size=\"pageSize\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\">\n        </el-pagination>\n\n        <el-dialog\n            title=\"提示\"\n            :visible.sync=\"centerDialogVisible\"\n            width=\"30%\"\n            center>\n\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\">\n                <el-form-item label=\"仓库名\" prop=\"name\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form.name\"></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"备注\" prop=\"remark\">\n                    <el-col :span=\"20\">\n                        <el-input type=\"textarea\" v-model=\"form.remark\"></el-input>\n                    </el-col>\n                </el-form-item>\n\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"StorageManage\",\n            data() {\n                return {\n                    tableData: [],\n                    pageSize:10,\n                    pageNum:1,\n                    total:0,\n                    name:'',\n                    centerDialogVisible: false,\n                    form:{\n                        id:'',\n                        name:'',\n                        remark:''\n                    },\n                    rules: {\n                        name: [\n                            {required: true, message: '请输入仓库名', trigger: 'blur'}\n                        ],\n                    }\n                }\n            },\n        methods:{\n            resetForm() {\n                this.$refs.form.resetFields();\n            },\n            add(){\n                this.centerDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetForm()\n\n                    this.form.id = ''\n                })\n            },\n            del(id){\n                console.log(id)\n\n                this.$axios.get(this.$httpUrl+'/storage/del?id='+id).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '删除成功！',\n                            type: 'success'\n                        });\n                        this.loadPost()\n                    }else{\n                        this.$message({\n                            message: '删除失败！',\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n\n            modify(row){\n              console.log(row)\n\n              this.centerDialogVisible = true //先打开对话框，表单中的值为form的默认值，后赋值\n              this.$nextTick(()=>{\n                  //赋值到表单\n                  this.form.id = row.id\n                  this.form.name = row.name\n                  this.form.remark = row.remark\n              })\n            },\n            doMod(){\n                this.$axios.post(this.$httpUrl+'/storage/update',this.form).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '编辑成功！',\n                            type: 'success'\n                        });\n                        this.centerDialogVisible = false\n                        this.loadPost()\n                        this.resetForm()\n                    }else{\n                        this.$message({\n                            message: '编辑失败！',\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            doSave(){\n                this.$axios.post(this.$httpUrl+'/storage/save',this.form).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '添加成功！',\n                            type: 'success'\n                        });\n                        this.centerDialogVisible = false\n                        this.loadPost()\n                        this.resetForm()\n                    }else{\n                        this.$message({\n                            message: '添加失败！',\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            save(){\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        if(this.form.id){\n                            this.doMod();\n                        }else{\n                            this.doSave();\n                        }\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            handleSizeChange(val) {\n                console.log(`每页 ${val} 条`);\n                this.pageNum=1\n                this.pageSize=val\n                this.loadPost()\n            },\n            handleCurrentChange(val) {\n                console.log(`当前页: ${val}`);\n                this.pageNum=val\n                this.loadPost()\n            },\n            loadGet(){\n                this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{\n                  console.log(res)\n                })\n            },\n            resetParam(){\n                this.name=''\n            },\n            loadPost(){\n                this.$axios.post(this.$httpUrl+'/storage/listPage',{\n                    pageSize:this.pageSize,\n                    pageNum:this.pageNum,\n                    param:{\n                        name:this.name,\n                    }\n                }).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.tableData=res.data\n                        this.total=res.total\n                    }else{\n                        alert('获取数据失败')\n                    }\n                })\n            }\n        },\n        beforeMount(){\n            //this.loadGet();\n            this.loadPost()\n        }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}