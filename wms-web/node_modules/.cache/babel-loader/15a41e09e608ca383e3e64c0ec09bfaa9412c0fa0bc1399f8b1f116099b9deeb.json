{"ast":null,"code":"export default {\n  name: \"Main\",\n  data() {\n    let checkAge = (rule, value, callback) => {\n      if (value > 100) {\n        callback(new Error('年龄输入过大'));\n      } else {\n        callback();\n      }\n    };\n    let checkDuplicate = (rule, value, callback) => {\n      if (this.form.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByAccount?account=\" + this.form.account).then(res => res.data).then(res => {\n        if (res.code != 200) {\n          callback();\n        } else {\n          callback(new Error('账号已经存在'));\n        }\n      });\n    };\n    return {\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      sex: '',\n      sexs: [{\n        value: '1',\n        label: '男'\n      }, {\n        value: '0',\n        label: '女'\n      }],\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        account: '',\n        name: '',\n        password: '',\n        age: '',\n        phone: '',\n        sex: '1',\n        roleId: '1'\n      },\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入名字',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 3,\n          message: '长度在 1 到 3 个位',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,3}$/,\n          message: '年龄必须为正整数字',\n          trigger: \"blur\"\n        }, {\n          validator: checkAge,\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^080\\d{8}$/,\n          message: \"请输入正确的手机号码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    save() {\n      this.$axios.post(this.$httpUrl + '/user/save', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          alert('fail');\n        }\n      });\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + '/user/list').then(res => res.data).then(res => {\n        console.log(res);\n      });\n    },\n    resetParam() {\n      this.name = '';\n      this.sex = '';\n      this.loadPost();\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/user/listPageC1', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          sex: this.sex\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    }\n  },\n  beforeMount() {\n    //this.loadGet();\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","checkAge","rule","value","callback","Error","checkDuplicate","form","id","$axios","get","$httpUrl","account","then","res","code","tableData","pageSize","pageNum","total","sex","sexs","label","centerDialogVisible","password","age","phone","roleId","rules","required","message","trigger","min","max","validator","pattern","methods","resetForm","$refs","resetFields","add","$nextTick","save","post","console","log","$message","type","loadPost","alert","handleSizeChange","val","handleCurrentChange","loadGet","resetParam","param","beforeMount"],"sources":["src/components/Main.vue"],"sourcesContent":["<template>\n  <div>\n      <div style=\"margin: 5px\">\n          <el-input v-model=\"name\" placeholder=\"请输入名字\" suffix-icon=\"el-icon-search\" style=\"width: 180px;margin-left: -4px\"\n                    @keyup.enter.native=\"loadPost\"></el-input>\n          <el-select v-model=\"sex\" filterable placeholder=\"请选择性别\" style=\"margin-left: 6px;\">\n              <el-option\n                  v-for=\"item in sexs\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n          </el-select>\n          <el-button type=\"primary\" style=\"margin-left: 18px;margin-right: 6px\" @click=\"loadPost\">查询</el-button>\n          <el-button type=\"success\" @click=\"resetParam\">重置</el-button>\n        <el-button type=\"primary\" style=\"margin-left: 16px;margin-right: 6px\" @click=\"add\">新增</el-button>\n      </div>\n      <el-table :data=\"tableData\"\n                :header-cell-style=\"{ background: '#f2f5fc', color: '#555555' }\"\n                border\n      >\n          <el-table-column prop=\"id\" label=\"ID\" width=\"60\">\n          </el-table-column>\n          <el-table-column prop=\"account\" label=\"账号\" width=\"120\">\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"姓名\" width=\"180\">\n          </el-table-column>\n          <el-table-column prop=\"age\" label=\"年龄\" width=\"60\">\n          </el-table-column>\n          <el-table-column prop=\"sex\" label=\"性别\" width=\"60\">\n              <template slot-scope=\"scope\">\n                  <el-tag\n                      :type=\"scope.row.sex === 1 ? 'primary' : 'success'\"\n                      disable-transitions>{{scope.row.sex === 1 ? '男' : '女'}}</el-tag>\n              </template>\n          </el-table-column>\n          <el-table-column prop=\"phone\" label=\"电话\" width=\"120\">\n          </el-table-column>\n          <el-table-column prop=\"roleId\" label=\"角色\" width=\"180\">\n              <template slot-scope=\"scope\">\n                  <el-tag\n                      :type=\"scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')\"\n                      disable-transitions>{{scope.row.roleId === 0 ? '超级管理员' :\n                      (scope.row.roleId === 1 ? '管理员' : '用户')}}</el-tag>\n              </template>\n          </el-table-column>\n          <el-table-column prop=\"operate\" label=\"操作\">\n            <el-button size=\"small\" type=\"success\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\">删除</el-button>\n          </el-table-column>\n      </el-table>\n\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pageNum\"\n          :page-sizes=\"[5, 10, 20,30]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n\n      <el-dialog\n              title=\"提示\"\n              :visible.sync=\"centerDialogVisible\"\n              width=\"30%\"\n              center>\n\n          <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\">\n              <el-form-item label=\"账号\" prop=\"account\">\n                  <el-col :span=\"20\">\n                      <el-input v-model=\"form.account\"></el-input>\n                  </el-col>\n              </el-form-item>\n              <el-form-item label=\"姓名\" prop=\"name\">\n                  <el-col :span=\"20\">\n                      <el-input v-model=\"form.name\"></el-input>\n                  </el-col>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"password\">\n                  <el-col :span=\"20\">\n                      <el-input v-model=\"form.password\"></el-input>\n                  </el-col>\n              </el-form-item>\n              <el-form-item label=\"年龄\" prop=\"age\">\n                  <el-col :span=\"20\">\n                      <el-input v-model=\"form.age\"></el-input>\n                  </el-col>\n              </el-form-item>\n              <el-form-item label=\"性别\" prop=\"sex\">\n                  <el-radio-group v-model=\"form.sex\">\n                      <el-radio label=\"1\">男</el-radio>\n                      <el-radio label=\"0\">女</el-radio>\n                  </el-radio-group>\n              </el-form-item>\n              <el-form-item label=\"电话\" prop=\"phone\">\n                  <el-col :span=\"20\">\n                      <el-input v-model=\"form.phone\"></el-input>\n                  </el-col>\n              </el-form-item>\n\n          </el-form>\n          <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n  </span>\n      </el-dialog>\n  </div>\n</template>\n\n<script>\n    export default {\n        name: \"Main\",\n        data() {\n            let checkAge = (rule, value, callback) => {\n                if(value>100){\n                  callback(new Error('年龄输入过大'));\n                }else{\n                  callback();\n                }\n            }\n            let checkDuplicate =(rule,value,callback)=>{\n                if(this.form.id){\n                    return callback();\n                }\n                this.$axios.get(this.$httpUrl+\"/user/findByAccount?account=\"+this.form.account).then(res=>res.data).then(res=>{\n                    if(res.code!=200){\n                      callback()\n                    }else{\n                      callback(new Error('账号已经存在'));\n                    }\n                })\n            }\n\n            return {\n                tableData: [],\n                pageSize:10,\n                pageNum:1,\n                total:0,\n                name:'',\n                sex:'',\n                sexs:[\n                    {\n                      value: '1',\n                      label: '男'\n                    }, {\n                      value: '0',\n                      label: '女'\n                    }\n                ],\n                centerDialogVisible: false,\n                form:{\n                    id:'',\n                    account:'',\n                    name:'',\n                    password:'',\n                    age:'',\n                    phone:'',\n                    sex:'1',\n                    roleId:'1'\n                },\n                rules: {\n                    account: [\n                        {required: true, message: '请输入账号', trigger: 'blur'},\n                        {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\n                        {validator:checkDuplicate,trigger: 'blur'}\n                    ],\n                    name: [\n                        {required: true, message: '请输入名字', trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: '请输入密码', trigger: 'blur'},\n                        {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'}\n                    ],\n                    age: [\n                        {required: true, message: '请输入年龄', trigger: 'blur'},\n                        {min: 1, max: 3, message: '长度在 1 到 3 个位', trigger: 'blur'},\n                        {pattern: /^([1-9][0-9]*){1,3}$/,message: '年龄必须为正整数字',trigger: \"blur\"},\n                        {validator:checkAge,trigger: 'blur'}\n                    ],\n                    phone: [\n                        {required: true,message: \"手机号不能为空\",trigger: \"blur\"},\n                        {pattern: /^080\\d{8}$/, message: \"请输入正确的手机号码\", trigger: \"blur\"}\n                    ]\n                }\n            }\n        },\n        methods:{\n            resetForm() {\n                this.$refs.form.resetFields();\n            },\n            add(){\n                this.centerDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetForm()\n                })\n            },\n            save(){\n                this.$axios.post(this.$httpUrl+'/user/save',this.form).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '添加成功！',\n                            type: 'success'\n                        });\n                        this.centerDialogVisible = false\n                        this.loadPost()\n                        this.resetForm()\n                    }else{\n                      alert('fail')\n                    }\n                })\n            },\n            handleSizeChange(val) {\n              console.log(`每页 ${val} 条`);\n              this.pageNum=1\n              this.pageSize=val\n              this.loadPost()\n            },\n            handleCurrentChange(val) {\n              console.log(`当前页: ${val}`);\n              this.pageNum=val\n              this.loadPost()\n            },\n            loadGet(){\n              this.$axios.get(this.$httpUrl+'/user/list').then(res=>res.data).then(res=>{\n                  console.log(res)\n              })\n            },\n            resetParam(){\n                this.name=''\n                this.sex=''\n                this.loadPost();\n            },\n            loadPost(){\n                this.$axios.post(this.$httpUrl+'/user/listPageC1',{\n                    pageSize:this.pageSize,\n                    pageNum:this.pageNum,\n                    param:{\n                      name:this.name,\n                      sex:this.sex\n                    }\n                }).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.tableData=res.data\n                        this.total=res.total\n                    }else{\n                        alert('获取数据失败')\n                    }\n                })\n            }\n        },\n        beforeMount(){\n            //this.loadGet();\n            this.loadPost()\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}