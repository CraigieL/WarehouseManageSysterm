{"ast":null,"code":"export default {\n  name: \"SelectUser\",\n  data() {\n    return {\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      sex: '',\n      sexs: [{\n        value: '1',\n        label: '男性'\n      }, {\n        value: '0',\n        label: '女性'\n      }],\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        no: '',\n        name: '',\n        password: '',\n        age: '',\n        phone: '',\n        sex: '0',\n        roleId: '2'\n      },\n      rules: {}\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    handleSizeChange(val) {\n      console.log(`ページごと ${val} 項目`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`現在のページ: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + '/user/list').then(res => res.data).then(res => {\n        console.log(res);\n      });\n    },\n    resetParam() {\n      this.name = '';\n      this.sex = '';\n    },\n    selectCurrentChange(val) {\n      //this.currentRow = val;\n      this.$emit(\"doSelectUser\", val);\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/user/listPageC1', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          sex: this.sex,\n          roleId: '2'\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert('データの取得に失敗しました');\n        }\n      });\n    }\n  },\n  beforeMount() {\n    //this.loadGet();\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageSize","pageNum","total","sex","sexs","value","label","centerDialogVisible","form","id","no","password","age","phone","roleId","rules","methods","resetForm","$refs","resetFields","add","$nextTick","save","validate","valid","doMod","doSave","console","log","handleSizeChange","val","loadPost","handleCurrentChange","loadGet","$axios","get","$httpUrl","then","res","resetParam","selectCurrentChange","$emit","post","param","code","alert","beforeMount"],"sources":["src/components/user/SelectUser.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"margin-bottom: 5px;\">\n            <el-input v-model=\"name\" placeholder=\"名前を入力してください\" suffix-icon=\"el-icon-search\" style=\"width: 180px;margin-left: -4px\"\n                      @keyup.enter.native=\"loadPost\"></el-input>\n            <el-select v-model=\"sex\" filterable placeholder=\"性別を洗濯してください\" style=\"margin-left: 6px;\">\n                <el-option\n                    v-for=\"item in sexs\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                </el-option>\n            </el-select>\n            <el-button type=\"primary\" style=\"margin-left: 18px;margin-right: 6px\" @click=\"loadPost\">照会</el-button>\n            <el-button type=\"success\" @click=\"resetParam\">リセット</el-button>\n\n        </div>\n        <el-table :data=\"tableData\"\n                  :header-cell-style=\"{ background: '#f2f5fc', color: '#555555' }\"\n                  border\n                  highlight-current-row\n                  @current-change=\"selectCurrentChange\"\n        >\n            <el-table-column prop=\"id\" label=\"ID\" width=\"60\">\n            </el-table-column>\n            <el-table-column prop=\"account\" label=\"アカウント\" width=\"120\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"氏名\" width=\"120\">\n            </el-table-column>\n            <el-table-column prop=\"age\" label=\"年齢\" width=\"60\">\n              </el-table-column>\n            <el-table-column prop=\"sex\" label=\"性別\" width=\"80\">\n                <template slot-scope=\"scope\">\n                    <el-tag\n                        :type=\"scope.row.sex === 1 ? 'primary' : 'success'\"\n                        disable-transitions>{{scope.row.sex === 1 ? '男性' : '女性'}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"roleId\" label=\"ロール\" width=\"120\">\n                <template slot-scope=\"scope\">\n                    <el-tag\n                            :type=\"scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')\"\n                            disable-transitions>{{scope.row.roleId === 0 ? 'スーパー管理者' :\n                        (scope.row.roleId === 1 ? '管理者' : '用者')}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"phone\" label=\"電話\">\n            </el-table-column>\n        </el-table>\n        <el-pagination\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"pageNum\"\n                :page-sizes=\"[5, 10, 20,30]\"\n                :page-size=\"pageSize\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                :total=\"total\">\n        </el-pagination>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"SelectUser\",\n        data() {\n            return {\n                tableData: [],\n                pageSize:10,\n                pageNum:1,\n                total:0,\n                name:'',\n                sex:'',\n                sexs:[\n                    {\n                        value: '1',\n                        label: '男性'\n                    }, {\n                        value: '0',\n                        label: '女性'\n                    }\n                ],\n                centerDialogVisible:false,\n                form:{\n                    id:'',\n                    no:'',\n                    name:'',\n                    password:'',\n                    age:'',\n                    phone:'',\n                    sex:'0',\n                    roleId:'2'\n                },\n                rules: {\n                }\n            }\n        },\n        methods:{\n            resetForm() {\n                this.$refs.form.resetFields();\n            },\n            add(){\n\n                this.centerDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetForm()\n                })\n\n            },\n            save(){\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        if(this.form.id){\n                            this.doMod();\n                        }else{\n                            this.doSave();\n                        }\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n\n            },\n            handleSizeChange(val) {\n                console.log(`ページごと ${val} 項目`);\n                this.pageNum=1\n                this.pageSize=val\n                this.loadPost()\n            },\n            handleCurrentChange(val) {\n                console.log(`現在のページ: ${val}`);\n                this.pageNum=val\n                this.loadPost()\n            },\n            loadGet(){\n                this.$axios.get(this.$httpUrl+'/user/list').then(res=>res.data).then(res=>{\n                    console.log(res)\n                })\n            },\n            resetParam(){\n                this.name=''\n                this.sex=''\n            },\n            selectCurrentChange(val) {\n                //this.currentRow = val;\n                this.$emit(\"doSelectUser\",val)\n            },\n            loadPost(){\n                this.$axios.post(this.$httpUrl+'/user/listPageC1',{\n                    pageSize:this.pageSize,\n                    pageNum:this.pageNum,\n                    param:{\n                        name:this.name,\n                        sex:this.sex,\n                        roleId:'2'\n                    }\n                }).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.tableData=res.data\n                        this.total=res.total\n                    }else{\n                        alert('データの取得に失敗しました')\n                    }\n\n                })\n            }\n        },\n        beforeMount() {\n            //this.loadGet();\n            this.loadPost()\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AA+DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACAL,IAAA;MACAM,GAAA;MACAC,IAAA,GACA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAC,mBAAA;MACAC,IAAA;QACAC,EAAA;QACAC,EAAA;QACAb,IAAA;QACAc,QAAA;QACAC,GAAA;QACAC,KAAA;QACAV,GAAA;QACAW,MAAA;MACA;MACAC,KAAA,GACA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,KAAA,CAAAV,IAAA,CAAAW,WAAA;IACA;IACAC,IAAA;MAEA,KAAAb,mBAAA;MACA,KAAAc,SAAA;QACA,KAAAJ,SAAA;MACA;IAEA;IACAK,KAAA;MACA,KAAAJ,KAAA,CAAAV,IAAA,CAAAe,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAAhB,IAAA,CAAAC,EAAA;YACA,KAAAgB,KAAA;UACA;YACA,KAAAC,MAAA;UACA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IAEA;IACAC,iBAAAC,GAAA;MACAH,OAAA,CAAAC,GAAA,UAAAE,GAAA;MACA,KAAA7B,OAAA;MACA,KAAAD,QAAA,GAAA8B,GAAA;MACA,KAAAC,QAAA;IACA;IACAC,oBAAAF,GAAA;MACAH,OAAA,CAAAC,GAAA,YAAAE,GAAA;MACA,KAAA7B,OAAA,GAAA6B,GAAA;MACA,KAAAC,QAAA;IACA;IACAE,QAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,MAAAC,QAAA,iBAAAC,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA;MACA;IACA;IACAC,WAAA;MACA,KAAA1C,IAAA;MACA,KAAAM,GAAA;IACA;IACAqC,oBAAAV,GAAA;MACA;MACA,KAAAW,KAAA,iBAAAX,GAAA;IACA;IACAC,SAAA;MACA,KAAAG,MAAA,CAAAQ,IAAA,MAAAN,QAAA;QACApC,QAAA,OAAAA,QAAA;QACAC,OAAA,OAAAA,OAAA;QACA0C,KAAA;UACA9C,IAAA,OAAAA,IAAA;UACAM,GAAA,OAAAA,GAAA;UACAW,MAAA;QACA;MACA,GAAAuB,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,GAAA;QACA,IAAAA,GAAA,CAAAM,IAAA;UACA,KAAA7C,SAAA,GAAAuC,GAAA,CAAAxC,IAAA;UACA,KAAAI,KAAA,GAAAoC,GAAA,CAAApC,KAAA;QACA;UACA2C,KAAA;QACA;MAEA;IACA;EACA;EACAC,YAAA;IACA;IACA,KAAAf,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}