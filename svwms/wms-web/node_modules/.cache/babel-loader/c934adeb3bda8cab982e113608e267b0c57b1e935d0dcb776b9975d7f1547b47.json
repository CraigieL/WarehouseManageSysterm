{"ast":null,"code":"import SelectUser from \"@/components/user/SelectUser.vue\";\nexport default {\n  name: \"GoodsManage\",\n  components: {\n    SelectUser\n  },\n  data() {\n    let checkCount = (rule, value, callback) => {\n      if (value > 9999) {\n        callback(new Error('数量输入过大'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\n      storageData: [],\n      goodstypeData: [],\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      storage: '',\n      goodstype: '',\n      centerDialogVisible: false,\n      inDialogVisible: false,\n      innerVisible: false,\n      currentRow: {},\n      tempUser: {},\n      form: {\n        id: '',\n        name: '',\n        storage: '',\n        goodstype: '',\n        count: '',\n        remark: ''\n      },\n      form1: {\n        goods: '',\n        goodsname: '',\n        count: '',\n        username: '',\n        userid: '',\n        adminId: '',\n        remark: '',\n        action: '1'\n      },\n      rules1: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入物品名',\n          trigger: 'blur'\n        }],\n        storage: [{\n          required: true,\n          message: '请选择仓库',\n          trigger: 'blur'\n        }],\n        goodstype: [{\n          required: true,\n          message: '请选择分类',\n          trigger: 'blur'\n        }],\n        count: [{\n          required: true,\n          message: '请输入数量',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,4}$/,\n          message: '数量必须为正整数字',\n          trigger: \"blur\"\n        }, {\n          validator: checkCount,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    doSelectUser(val) {\n      console.log(val);\n      this.tempUser = val;\n    },\n    confirmUser() {\n      this.form1.username = this.tempUser.name;\n      this.form1.userid = this.tempUser.id;\n      this.innerVisible = false;\n    },\n    selectCurrentChange(val) {\n      this.currentRow = val;\n    },\n    formatStorage(row) {\n      let temp = this.storageData.find(item => {\n        return item.id == row.storage;\n      });\n      return temp && temp.name;\n    },\n    formatGoodstype(row) {\n      let temp = this.goodstypeData.find(item => {\n        return item.id == row.goodstype;\n      });\n      return temp && temp.name;\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    resetInForm() {\n      this.$refs.form1.resetFields();\n    },\n    del(id) {\n      console.log(id);\n      this.$axios.get(this.$httpUrl + '/goods/del?id=' + id).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '操作成功！',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '操作失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n        this.form.id = '';\n      });\n    },\n    inGoods() {\n      if (!this.currentRow.id) {\n        alert('请选择记录');\n        return;\n      }\n      this.inDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetInForm();\n      });\n      this.form1.goodsname = this.currentRow.name;\n      this.form1.goods = this.currentRow.id;\n      this.form1.adminId = this.user.id;\n      this.form1.action = '1';\n    },\n    outGoods() {\n      if (!this.currentRow.id) {\n        alert('请选择记录');\n        return;\n      }\n      this.inDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetInForm();\n      });\n      this.form1.goodsname = this.currentRow.name;\n      this.form1.goods = this.currentRow.id;\n      this.form1.adminId = this.user.id;\n      this.form1.action = '2';\n    },\n    selectUser() {\n      this.innerVisible = true;\n    },\n    modify(row) {\n      console.log(row);\n      this.centerDialogVisible = true; //先打开对话框，表单中的值为form的默认值，后赋值\n      this.$nextTick(() => {\n        //赋值到表单\n        this.form.id = row.id;\n        this.form.name = row.name;\n        this.form.storage = row.storage;\n        this.form.goodstype = row.goodstype;\n        this.form.count = row.count;\n        this.form.remark = row.remark;\n      });\n    },\n    doMod() {\n      this.$axios.post(this.$httpUrl + '/goods/update', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '编辑成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '编辑失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + '/goods/save', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '添加失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    doInGoods() {\n      this.$axios.post(this.$httpUrl + '/record/save', this.form1).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: '操作成功！',\n            type: 'success'\n          });\n          this.inDialogVisible = false;\n          this.loadPost();\n          this.resetInForm();\n        } else {\n          this.$message({\n            message: '操作失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + '/goods/list').then(res => res.data).then(res => {\n        console.log(res);\n      });\n    },\n    resetParam() {\n      this.name = '';\n      this.storage = '';\n      this.goodstype = '';\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/goods/listPage', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          goodstype: this.goodstype + '',\n          storage: this.storage + ''\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    },\n    loadStorage() {\n      this.$axios.get(this.$httpUrl + '/storage/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.storageData = res.data;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    },\n    loadGoodstype() {\n      this.$axios.get(this.$httpUrl + '/goodstype/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.goodstypeData = res.data;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    }\n  },\n  beforeMount() {\n    //this.loadGet();\n    this.loadStorage();\n    this.loadGoodstype();\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["SelectUser","name","components","data","checkCount","rule","value","callback","Error","user","JSON","parse","sessionStorage","getItem","storageData","goodstypeData","tableData","pageSize","pageNum","total","storage","goodstype","centerDialogVisible","inDialogVisible","innerVisible","currentRow","tempUser","form","id","count","remark","form1","goods","goodsname","username","userid","adminId","action","rules1","rules","required","message","trigger","pattern","validator","methods","doSelectUser","val","console","log","confirmUser","selectCurrentChange","formatStorage","row","temp","find","item","formatGoodstype","resetForm","$refs","resetFields","resetInForm","del","$axios","get","$httpUrl","then","res","code","$message","type","loadPost","add","$nextTick","inGoods","alert","outGoods","selectUser","modify","doMod","post","doSave","save","validate","valid","doInGoods","handleSizeChange","handleCurrentChange","loadGet","resetParam","param","loadStorage","loadGoodstype","beforeMount"],"sources":["src/components/goods/GoodsManage.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"margin: 5px\">\n            <el-input v-model=\"name\" placeholder=\"请输入物品名\" suffix-icon=\"el-icon-search\" style=\"width: 180px;margin-left: -4px\"\n                      @keyup.enter.native=\"loadPost\"></el-input>\n            <el-select v-model=\"storage\" placeholder=\"请选择仓库\" style=\"margin-left: 5px;\">\n                <el-option\n                        v-for=\"item in storageData\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                </el-option>\n            </el-select>\n            <el-select v-model=\"goodstype\" placeholder=\"请选择分类\" style=\"margin-left: 5px;\">\n                <el-option\n                        v-for=\"item in goodstypeData\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                </el-option>\n            </el-select>\n\n            <el-button type=\"primary\" style=\"margin-left: 18px;margin-right: 6px\" @click=\"loadPost\">查询</el-button>\n            <el-button type=\"success\" @click=\"resetParam\">重置</el-button>\n            <el-button type=\"primary\" style=\"margin-left: 16px;margin-right: 6px\" @click=\"add\">新增</el-button>\n\n            <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"inGoods\" v-if=\"user.roleId!=2\">入库</el-button>\n            <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"outGoods\" v-if=\"user.roleId!=2\">出库</el-button>\n\n        </div>\n        <el-table :data=\"tableData\"\n                :header-cell-style=\"{ background: '#f2f5fc', color: '#555555' }\"\n                border\n                highlight-current-row\n                @current-change=\"selectCurrentChange\"\n        >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"物品名\" width=\"120\">\n        </el-table-column>\n        <el-table-column prop=\"storage\" label=\"仓库\" width=\"120\" :formatter=\"formatStorage\">\n        </el-table-column>\n        <el-table-column prop=\"goodstype\" label=\"分类\" width=\"120\" :formatter=\"formatGoodstype\">\n        </el-table-column>\n        <el-table-column prop=\"count\" label=\"数量\" width=\"120\">\n        </el-table-column>\n        <el-table-column prop=\"remark\" label=\"备注\" width=\"200\">\n        </el-table-column>\n        <el-table-column prop=\"operate\" label=\"操作\" v-if=\"user.roleId!=2\">\n            <template slot-scope=\"scope\">\n                <el-button size=\"small\" type=\"success\" @click=\"modify(scope.row) \">编辑</el-button>\n                <el-popconfirm\n                    title=\"确定删除吗？\"\n                    @confirm=\"del(scope.row.id)\"\n                    style=\"margin-left: 10px;\"\n                >\n                <el-button slot=\"reference\" size=\"small\" type=\"danger\">删除</el-button>\n                </el-popconfirm>\n            </template>\n        </el-table-column>\n        </el-table>\n\n        <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20,30]\"\n            :page-size=\"pageSize\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\">\n        </el-pagination>\n\n        <el-dialog\n            title=\"物品维护\"\n            :visible.sync=\"centerDialogVisible\"\n            width=\"30%\"\n            center>\n\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\">\n                <el-form-item label=\"物品名\" prop=\"name\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form.name\"></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"仓库\" prop=\"storage\">\n                    <el-col :span=\"20\">\n                        <el-select v-model=\"form.storage\" placeholder=\"请选择仓库\" style=\"margin-left: 5px;\">\n                            <el-option\n                                    v-for=\"item in storageData\"\n                                    :key=\"item.id\"\n                                    :label=\"item.name\"\n                                    :value=\"item.id\">\n                            </el-option>\n                        </el-select>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"分类\" prop=\"goodstype\">\n                    <el-col :span=\"20\">\n                        <el-select v-model=\"form.goodstype\" placeholder=\"请选择分类\" style=\"margin-left: 5px;\">\n                            <el-option\n                                    v-for=\"item in goodstypeData\"\n                                    :key=\"item.id\"\n                                    :label=\"item.name\"\n                                    :value=\"item.id\">\n                            </el-option>\n                        </el-select>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"数量\" prop=\"count\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form.count\"></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"备注\" prop=\"remark\">\n                    <el-col :span=\"20\">\n                        <el-input type=\"textarea\" v-model=\"form.remark\"></el-input>\n                    </el-col>\n                </el-form-item>\n            </el-form>\n\n            <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n\n        <el-dialog\n                title=\"出入库\"\n                :visible.sync=\"inDialogVisible\"\n                width=\"30%\"\n                center>\n\n            <el-dialog\n                    width=\"75%\"\n                    title=\"用户选择\"\n                    :visible.sync=\"innerVisible\"\n                    append-to-body>\n                <SelectUser @doSelectUser=\"doSelectUser\"></SelectUser>\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"innerVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"confirmUser\">确 定</el-button>\n                  </span>\n            </el-dialog>\n\n            <el-form ref=\"form1\" :rules=\"rules1\" :model=\"form1\" label-width=\"80px\">\n                <el-form-item label=\"物品名\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form1.goodsname\" readonly></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"申请人\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form1.username\" readonly @click.native=\"selectUser\"></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"数量\" prop=\"count\">\n                    <el-col :span=\"20\">\n                        <el-input v-model=\"form1.count\"></el-input>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"备注\" prop=\"remark\">\n                    <el-col :span=\"20\">\n                        <el-input type=\"textarea\" v-model=\"form1.remark\"></el-input>\n                    </el-col>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"inDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"doInGoods\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    import SelectUser from \"@/components/user/SelectUser.vue\";\n    export default {\n        name: \"GoodsManage\",\n      components: {SelectUser},\n            data() {\n                let checkCount = (rule, value, callback) => {\n                    if(value>9999){\n                        callback(new Error('数量输入过大'));\n                    }else{\n                        callback();\n                }\n                };\n\n                return {\n                    user : JSON.parse(sessionStorage.getItem('CurUser')),\n                    storageData:[],\n                    goodstypeData:[],\n                    tableData: [],\n                    pageSize:10,\n                    pageNum:1,\n                    total:0,\n                    name:'',\n                    storage:'',\n                    goodstype:'',\n                    centerDialogVisible: false,\n                    inDialogVisible:false,\n                    innerVisible:false,\n                    currentRow:{},\n                    tempUser:{},\n                    form:{\n                        id:'',\n                        name:'',\n                        storage:'',\n                        goodstype:'',\n                        count:'',\n                        remark:''\n                    },\n                    form1:{\n                        goods:'',\n                        goodsname:'',\n                        count:'',\n                        username:'',\n                        userid:'',\n                        adminId:'',\n                        remark:'',\n                        action:'1'\n                    },\n                    rules1:{\n\n                    },\n                    rules: {\n                        name: [\n                            {required: true, message: '请输入物品名', trigger: 'blur'}\n                        ],\n                        storage:[\n                            {required: true, message: '请选择仓库', trigger: 'blur'}\n                        ],\n                        goodstype:[\n                            {required: true, message: '请选择分类', trigger: 'blur'}\n                        ],\n                        count: [\n                            {required: true, message: '请输入数量', trigger: 'blur'},\n                            {pattern: /^([1-9][0-9]*){1,4}$/,message: '数量必须为正整数字',trigger: \"blur\"},\n                            {validator:checkCount,trigger: 'blur'}\n                        ],\n                    }\n                }\n            },\n        methods:{\n            doSelectUser(val){\n                console.log(val)\n                this.tempUser = val\n            },\n            confirmUser(){\n                this.form1.username = this.tempUser.name\n                this.form1.userid = this.tempUser.id\n\n                this.innerVisible = false\n            },\n            selectCurrentChange(val) {\n                this.currentRow = val;\n            },\n            formatStorage(row){\n                let temp =  this.storageData.find(item=>{\n                    return item.id == row.storage\n                })\n\n                return temp && temp.name\n            },\n            formatGoodstype(row){\n                let temp =  this.goodstypeData.find(item=>{\n                    return item.id == row.goodstype\n                })\n\n                return temp && temp.name\n            },\n            resetForm() {\n                this.$refs.form.resetFields();\n            },\n            resetInForm() {\n              this.$refs.form1.resetFields();\n            },\n            del(id){\n                console.log(id)\n\n                this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n\n                        this.$message({\n                            message: '操作成功！',\n                            type: 'success'\n                        });\n                        this.loadPost()\n                    }else{\n                        this.$message({\n                            message: '操作失败！',\n                            type: 'error'\n                        });\n                    }\n\n                })\n            },\n            add(){\n                this.centerDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetForm()\n\n                    this.form.id = ''\n                })\n            },\n            inGoods(){\n                if(!this.currentRow.id){\n                    alert('请选择记录');\n                    return;\n                }\n                this.inDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetInForm()\n                })\n\n                this.form1.goodsname = this.currentRow.name\n                this.form1.goods = this.currentRow.id\n                this.form1.adminId=this.user.id\n                this.form1.action='1'\n            },\n\n            outGoods(){\n                if(!this.currentRow.id){\n                    alert('请选择记录');\n                    return;\n                }\n                this.inDialogVisible = true\n                this.$nextTick(()=>{\n                    this.resetInForm()\n                })\n\n                this.form1.goodsname = this.currentRow.name\n                this.form1.goods = this.currentRow.id\n                this.form1.adminId=this.user.id\n                this.form1.action='2'\n\n            },\n            selectUser(){\n                this.innerVisible=true\n            },\n            modify(row){\n              console.log(row)\n\n              this.centerDialogVisible = true //先打开对话框，表单中的值为form的默认值，后赋值\n              this.$nextTick(()=>{\n                  //赋值到表单\n                  this.form.id = row.id\n                  this.form.name = row.name\n                  this.form.storage = row.storage\n                  this.form.goodstype = row.goodstype\n                  this.form.count = row.count\n                  this.form.remark = row.remark\n              })\n            },\n            doMod(){\n                this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '编辑成功！',\n                            type: 'success'\n                        });\n                        this.centerDialogVisible = false\n                        this.loadPost()\n                        this.resetForm()\n                    }else{\n                        this.$message({\n                            message: '编辑失败！',\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            doSave(){\n                this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.$message({\n                            message: '添加成功！',\n                            type: 'success'\n                        });\n                        this.centerDialogVisible = false\n                        this.loadPost()\n                        this.resetForm()\n                    }else{\n                        this.$message({\n                            message: '添加失败！',\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            save(){\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        if(this.form.id){\n                            this.doMod();\n                        }else{\n                            this.doSave();\n                        }\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            doInGoods(){\n                this.$axios.post(this.$httpUrl+'/record/save',this.form1).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n\n                        this.$message({\n                            message: '操作成功！',\n                            type: 'success'\n                        });\n                        this.inDialogVisible = false\n                        this.loadPost()\n                        this. resetInForm()\n                    }else{\n                        this.$message({\n                            message: '操作失败！',\n                            type: 'error'\n                        });\n                    }\n\n                })\n            },\n            handleSizeChange(val) {\n                console.log(`每页 ${val} 条`);\n                this.pageNum=1\n                this.pageSize=val\n                this.loadPost()\n            },\n            handleCurrentChange(val) {\n                console.log(`当前页: ${val}`);\n                this.pageNum=val\n                this.loadPost()\n            },\n            loadGet(){\n                this.$axios.get(this.$httpUrl+'/goods/list').then(res=>res.data).then(res=>{\n                  console.log(res)\n                })\n            },\n            resetParam(){\n                this.name=''\n                this.storage=''\n                this.goodstype=''\n            },\n            loadPost(){\n                this.$axios.post(this.$httpUrl+'/goods/listPage',{\n                    pageSize:this.pageSize,\n                    pageNum:this.pageNum,\n                    param:{\n                        name:this.name,\n                        goodstype:this.goodstype+'',\n                        storage:this.storage+''\n                    }\n                }).then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.tableData=res.data\n                        this.total=res.total\n                    }else{\n                        alert('获取数据失败')\n                    }\n                })\n            },\n            loadStorage(){\n                this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.storageData=res.data\n                    }else{\n                        alert('获取数据失败')\n                    }\n\n                })\n            },\n            loadGoodstype(){\n                this.$axios.get(this.$httpUrl+'/goodstype/list').then(res=>res.data).then(res=>{\n                    console.log(res)\n                    if(res.code==200){\n                        this.goodstypeData=res.data\n                    }else{\n                        alert('获取数据失败')\n                    }\n\n                })\n            }\n        },\n        beforeMount(){\n            //this.loadGet();\n            this.loadStorage()\n            this.loadGoodstype()\n            this.loadPost()\n        }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}