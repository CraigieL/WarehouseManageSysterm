{"ast":null,"code":"export default {\n  name: \"DateUtils\",\n  props: [\"s\"],\n  data() {\n    return {\n      time: {\n        hour: \"\",\n        minitus: \"\",\n        seconds: \"\"\n      },\n      nowTime: \"\",\n      week: [\"星期天\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]\n    };\n  },\n  mounted() {\n    this.dateTime();\n  },\n  methods: {\n    dateTime() {\n      this.timeFormate();\n      setTimeout(() => {\n        this.dateTime();\n      }, 1000);\n    },\n    timeFormate() {\n      const newtime = new Date();\n      this.time.hour = this.getIncrease(newtime.getHours(), 2);\n      this.time.minitus = this.getIncrease(newtime.getMinutes(), 2);\n      this.time.seconds = this.getIncrease(newtime.getSeconds(), 2);\n      this.nowTime = this.getIncrease(newtime.getFullYear(), 4) + \"年\" + this.getIncrease(newtime.getMonth() + 1, 2) + \"月\" + this.getIncrease(newtime.getDate(), 2) + \"日 \" + this.week[newtime.getDay()];\n      //this.hour=\n      // return `${this.time.hour}:${this.time.minitus}:${this.time.seconds}`;\n    },\n\n    getIncrease(num, digit) {\n      var increase = \"\";\n      for (var i = 0; i < digit; i++) {\n        increase += \"0\";\n      }\n      return (increase + num).slice(-digit);\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","time","hour","minitus","seconds","nowTime","week","mounted","dateTime","methods","timeFormate","setTimeout","newtime","Date","getIncrease","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","getDay","num","digit","increase","i","slice"],"sources":["src/components/DateUtils.vue"],"sourcesContent":["<template >\n    <div style=\"padding: 30px;font-size: 30px;\">\n        <span class=\"time\" id=\"time\" >\n            今天是：<span class=\"date\">{{ nowTime }}</span>\n            <span class=\"hour\" style=\"margin-left: 5px;\">{{time.hour}}</span>\n            <a class=\"split\">:</a>\n            <span class=\"minitus\">{{time.minitus}}</span>\n            <a class=\"split\">:</a>\n            <span class=\"seconds\">{{time.seconds}}</span>\n        </span>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"DateUtils\",\n        props: [\"s\"],\n        data() {\n            return {\n                time: {\n                    hour: \"\",\n                    minitus: \"\",\n                    seconds: \"\"\n                },\n                nowTime: \"\",\n                week: [\n                    \"星期天\",\n                    \"星期一\",\n                    \"星期二\",\n                    \"星期三\",\n                    \"星期四\",\n                    \"星期五\",\n                    \"星期六\"\n                ]\n            };\n        },\n        mounted() {\n            this.dateTime();\n        },\n        methods: {\n            dateTime() {\n                this.timeFormate();\n                setTimeout(() => {\n                  this.dateTime();\n                }, 1000);\n            },\n            timeFormate() {\n                const newtime = new Date();\n                this.time.hour = this.getIncrease(newtime.getHours(), 2);\n                this.time.minitus = this.getIncrease(newtime.getMinutes(), 2);\n                this.time.seconds = this.getIncrease(newtime.getSeconds(), 2);\n                this.nowTime =\n                    this.getIncrease(newtime.getFullYear(), 4) +\n                    \"年\" +\n                    this.getIncrease(newtime.getMonth() + 1, 2) +\n                    \"月\" +\n                    this.getIncrease(newtime.getDate(), 2) +\n                    \"日 \" +\n                    this.week[newtime.getDay()];\n                //this.hour=\n                // return `${this.time.hour}:${this.time.minitus}:${this.time.seconds}`;\n            },\n            getIncrease(num, digit) {\n                var increase = \"\";\n                for (var i = 0; i < digit; i++) {\n                  increase += \"0\";\n                }\n                return (increase + num).slice(-digit);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n.txt-data .time {\n  font-size: 1rem;\n  margin-right: 0.5rem;\n}\n.split {\n  animation: shark 1s step-end infinite;\n  vertical-align: center;\n  margin-left: 2px;\n  margin-right: 2px;\n}\n@keyframes shark {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0;\n  }\n}\n</style>"],"mappings":"AAcA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,OAAA;MACA;MACAC,OAAA;MACAC,IAAA,GACA,OACA,OACA,OACA,OACA,OACA,OACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAD,SAAA;MACA,KAAAE,WAAA;MACAC,UAAA;QACA,KAAAH,QAAA;MACA;IACA;IACAE,YAAA;MACA,MAAAE,OAAA,OAAAC,IAAA;MACA,KAAAZ,IAAA,CAAAC,IAAA,QAAAY,WAAA,CAAAF,OAAA,CAAAG,QAAA;MACA,KAAAd,IAAA,CAAAE,OAAA,QAAAW,WAAA,CAAAF,OAAA,CAAAI,UAAA;MACA,KAAAf,IAAA,CAAAG,OAAA,QAAAU,WAAA,CAAAF,OAAA,CAAAK,UAAA;MACA,KAAAZ,OAAA,GACA,KAAAS,WAAA,CAAAF,OAAA,CAAAM,WAAA,SACA,MACA,KAAAJ,WAAA,CAAAF,OAAA,CAAAO,QAAA,aACA,MACA,KAAAL,WAAA,CAAAF,OAAA,CAAAQ,OAAA,SACA,OACA,KAAAd,IAAA,CAAAM,OAAA,CAAAS,MAAA;MACA;MACA;IACA;;IACAP,YAAAQ,GAAA,EAAAC,KAAA;MACA,IAAAC,QAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAF,KAAA,EAAAE,CAAA;QACAD,QAAA;MACA;MACA,QAAAA,QAAA,GAAAF,GAAA,EAAAI,KAAA,EAAAH,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}